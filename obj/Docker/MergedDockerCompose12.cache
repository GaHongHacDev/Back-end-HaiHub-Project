name: dockercompose12480514602510649397
services:
  hairhub.api:
    build:
      context: D:\Ky8\Exe201\Hairhub
      dockerfile: Hairhub.API/Dockerfile
      args:
        BUILD_CONFIGURATION: Release
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Hairhub.API
    container_name: Hairhub.API
    depends_on:
      mssql:
        condition: service_started
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings__DefaultConnection: Server=mssql-db;Database=HairHubDB;User Id=sa;Password=Admin@123;
    image: hairhubapi
    labels:
      com.microsoft.visual-studio.project-name: Hairhub.API
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/Hairhub.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      demo: null
    ports:
      - mode: ingress
        target: 80
        published: "8080"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\flami\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\flami\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\flami\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\flami\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\flami\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net8.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  mssql:
    container_name: mssql-db
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_PID: Developer
      MSSQL_TCP_PORT: "1433"
      SA_PASSWORD: Admin@123
    hostname: mssql-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      demo: null
    ports:
      - mode: ingress
        target: 1433
        published: "1455"
        protocol: tcp
    user: root
    volumes:
      - type: volume
        source: mssql-data
        target: /var/opt/mssql/data
        volume: {}
      - type: volume
        source: mssql-log
        target: /var/opt/mssql/log
        volume: {}
      - type: volume
        source: mssql-secrets
        target: /var/opt/mssql/secrets
        volume: {}
networks:
  demo:
    name: demo
volumes:
  mssql-data:
    name: dockercompose12480514602510649397_mssql-data
  mssql-log:
    name: dockercompose12480514602510649397_mssql-log
  mssql-secrets:
    name: dockercompose12480514602510649397_mssql-secrets